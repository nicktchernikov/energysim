    <div class="ui main text container">
        <div class="ui segment"> 
            <!-- load setup filename dropdown -->
            <h1 class="ui header">Load Output File</h1>
            <div class="ui selection dropdown">
                <input type="hidden" name="filename">
                <i class="dropdown icon"></i>
                <div class="default text">Choose filename</div>
                <div class="menu" id="outputFilenames"></div>
            </div>
            <div class="ui blue button" id="loadOutputFileButton">Load</div>
            <!-- /end setup filename dropdown -->
        </div> <!-- /end segment -->

        <div id='results' class="ui segment"> 
             <div id="plots"></div>
        </div>

    </div> <!-- /end main -->

    <script>
        // Get appliance types
        let applianceTypes = [];
        $.getJSON('/applianceInits', (data) => {
            $.each(data, (key, val) => {
                applianceTypes.push(val.type);
            });
        });

        // Get room types 
        let roomTypes = [
            'bathroom', 'laundry room', 'bedroom', 
            'living room', 'kitchen', 'basement'
        ];

        // When DOM elements are loaded
        $(document).ready(() => {
            // -- Activate UI
            activateUI();

            // -- Load setup filenames
            loadOutputFilenames();

            // -- Set listeners
            $('#loadOutputFileButton').click(()=> {
                let filename = $('input[name="filename"]').val();
                let outputId = filename.split('.')[0];

                console.log(outputId);

                $('#results').show();
                $('#plots').html('Loading...');
                $.get('/getOutputTotalJSON/'+outputId, (data)=>{
                    // TODO: 
                    /// - Move layout stuff into this file only
                    let rooms = data[1];
                    $('#plots').html();
                    let html = '';
                    let appliances = [];
                    $.each(rooms, (_, room) => {
                        html += '<h3>'+room.room_id+'</h3>';
                        $.each(room.appliances, (_, appliance) => {
                            html += '<h4>'+appliance.appliance_id+'</h4>';
                            html += '<div id="'+appliance.appliance_id+'"></div>';
                            appliances.push(appliance);
                        });
                    });
                    $('#plots').html(html);
                    $.each(appliances, (key, appliance) => {
                        appliance.layout = {
                            xaxis: {
                                title: 'Hours'
                            },
                            yaxis: {
                                title: 'Watts consumed (Cumulative)'
                            }
                        }
                        Plotly.newPlot(appliance.appliance_id, appliance.data, appliance.layout);
                    });
                });
            });

        });

        // Functions
        // -- Activate UI Elements
        function activateUI() {
            $('.ui.selection.dropdown').dropdown();
        }
        // --- Add setup filenmames
        function loadOutputFilenames() {
            $.getJSON('/getOutputs', (res) => { 
                res.forEach((outputFilename) => {
                    outputFilename = outputFilename.split('.')[0];
                    $('#outputFilenames').append(
                        '<div class="item" data-value="'+outputFilename+'">'+outputFilename+'</div>'
                    );
                });
            });
        }
    </script>